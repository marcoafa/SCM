@using SCM.ViewModel;
@model DataDocumentVM;

@{
    ViewData["Title"] = "Document";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<section class="Document">
    <div class="divHeader">

        <h2 style="color: white;" class="text-center">Alta de Manifiesto</h2>


    </div>


    <!--NUMBER OF THE DOCUMENT-->
    <div class="form-group row">
        <label class="control-label col-sm-2 offset-md-2" for="ManifiestoVal">No. Manifiesto:</label>
        <div class="col-sm-6 input-group">

            <div class="input-group-append">
                <span class="input-group-text"><i class="fas fa-file-alt"></i></span>
            </div>
            <input type="number" min="0" class="form-control" id="ManifiestoVal" placeholder="Agregar el numero del Manifiesto">
        </div>
    </div>
    <!--CUSTOMER-->
    <div class="form-group row">
        <label class="control-label col-sm-2 offset-md-2" for="CustomerVal">Cliente:</label>
        <div class="col-sm-6 input-group">

            <div class="input-group-append">
                <span class="input-group-text"><i class="fas fa-address-book"></i></span>
            </div>

            <select class="form-control" id="CustomerVal">
                <option value="0">Por favor selecciona un Cliente</option>
                @{foreach (var item in Model.Customers)
                    {
                        <option value="@item.CustomerID">@item.CustomerName</option>
                    }
                }



            </select>
        </div>
    </div>

    <!--EMPLOYEE-->
    <div class="form-group row">
        <label class="control-label col-sm-2 offset-md-2" for="CustomerVal">Empleado:</label>
        <div class="col-sm-6 input-group">

            <div class="input-group-append">
                <span class="input-group-text"><i class="fas fa-user"></i></span>
            </div>

            <select class="form-control" id="EmployeeVal">
                <option value="0">Por favor selecciona un Empleado</option>
                @{foreach (var item in Model.Users)
                    {
                        <option value="@item.UsersID">@item.UsersName</option>
                    }
                }
            </select>
        </div>
    </div>

    <!--DIVISOR LINE-->
    <div class="form-group row">
        <div class="col-sm-8 offset-md-2 input-group">
            <span style="display:block; width:100%; border:2px solid #007bff;">

            </span>
           
        </div>
    </div>
    <!--NUMBER OF THE LICENSE PLATE-->
    <div class="form-group row">
        <label class="control-label col-sm-2 offset-md-2" for="LicensePlateVal">No. Placas:</label>
        <div class="col-sm-6 input-group">

            <div class="input-group-append">
                <span class="input-group-text"><i class="fas fa-truck-moving"></i></span>
            </div>
            <input type="text" class="form-control" id="LicensePlateVal" placeholder="Agregar el numero de las placas del vehiculo">
        </div>
    </div>

    <!--FECHA DE RECOLECCION-->
    <div class="form-group row">
        <label class="control-label col-sm-2 offset-md-2" for="NewDateRe">Fecha de Recoleccion</label>
        <div class="col-sm-3 input-group">

            <div class="input-group-append">
                <span class="input-group-text"><i class="fas fa-calendar-day"></i></span>
            </div>
            <input type="date" class="form-control" id="NewDateRe">
        </div>
    </div>

    <!--FECHA DE RECEPCION-->
    <div class="form-group row">
        <label class="control-label col-sm-2 offset-md-2" for="NewDateRo">Fecha de Recepcion</label>
        <div class="col-sm-3 input-group">

            <div class="input-group-append">
                <span class="input-group-text"><i class="fas fa-calendar-day"></i></span>
            </div>
            <input disabled type="date" class="form-control" id="NewDateRo">
        </div>
    </div>

    <!--OPTION TO GET FULL INFORMATION FOR THE DOCUMENT-->
    <div class="form-group row">
        <div class="col-md-6 offset-md-4">
            <div class="form-check" style="padding:0;">

                <label style="margin-top:7px; margin-right: 25px;" class="form-check-label" for="OpfullDocument">
                    Selecciona el cuadro si requieres guardaer todo el manifiesto
                </label>
                <input style="width:2rem; height:2rem;" class="form-check-input" type="checkbox" id="OpfullDocument">
            </div>
        </div>
    </div>


    <section class="DocumentFormOptional" style="display:none; margin-top:10px;">

        <!--ADD PRODUCTS-->
        <div class="form-group row">
            <label for="EmployeeVal" class="col-sm-2 offset-md-2 col-form-label">Agregar Productos</label>

            <div class="col-md-2">
                <button type="button" class="btn btn-primary btn_big AddProduct">Agregar</button>

            </div>
        </div>



        <!--PRODUCTS WITH THEIR ATRIBUTES-->
        <div class="form-group row">
            <table class="table table-striped table-dark col-md-10 offset-md-1" id="Producttable">
                <thead>
                    <tr>
                        <th scope="col">Descripcion del Producto</th>
                        <th scope="col">Cantidad</th>
                        <th scope="col">Capacidad</th>
                        <th scope="col">Tipo de Contenedor</th>

                        <th scope="col">Manejo del Producto</th>
                    </tr>
                </thead>
                <tr class="participantRow">

                    <td>
                        <select class="form-control" id="ProductVal">
                            <option value="0">Por favor selecciona un Producto</option>

                            @{foreach (var item in Model.Products)
                                {
                                    <option value="@item.ProductID">@item.ProductName</option>
                                }
                            }
                        </select>
                    </td>
                    <td>
                        <input type="number" min="0" class="form-control" id="ProductQuantityVal" placeholder="Agregar la cantidad del Producto">
                    </td>

                    <td>
                        <input type="text" class="form-control" id="UnitVal" placeholder="Agregar la capacidad para el Contenedor">
                    </td>
                    <td>
                        <select class="form-control" id="ContainerVal">
                            <option value="0">Por favor selecciona un Contenedor</option>

                            @{foreach (var item in Model.Containers)
                                {
                                    <option value="@item.ContainerID">@item.ContainerName</option>
                                }
                            }
                        </select>
                    </td>
                    <td>
                        <select class="form-control" id="ManagementVal">
                            <option value="0">Por favor selecciona el manejo para el material</option>

                            @{foreach (var item in Model.ManagementsTypes)
                                {
                                    <option value="@item.ManagementID">@item.ManagementName</option>
                                }
                            }
                        </select>
                    </td>


                    <td>
                        <button class="btn btn-danger remove" type="button">Remove</button>
                    </td>
                </tr>
            </table>
        </div>


    </section>


    <!--BUTTON TO SAVE THE DOCUMENT-->
    <div class="form-group row">
        <div class="col-md-2 offset-md-8">
            <button style="text-align:right" class="btn btn-primary SaveDocument">Guardar Manifiesto</button>
        </div>
    </div>
</section>




@section Scripts
    {
    <script>

        class ProductRow {
            constructor(ProductID, ContainerID, ManagementID, Quantity, Unit) {
                this.ProductID = ProductID;
                this.ContainerID = ContainerID;
                this.ManagementID = ManagementID;
                this.Quantity = Quantity;
                this.Unit = Unit;
            }
        }
        /* Variables */

        var row = $(".participantRow");

        /* Functions */


        function addRow() {
            row.clone(true, true).appendTo("#Producttable");
        }

        $('.AddProduct').on("click", function () {



            if ($("#Producttable tr").length < 17) {
                addRow();

            }
            $(this).closest("tr").appendTo("#Producttable");



        });
        $("#Producttable").on('click', '.remove', function () {
        
            removeRow($(this));
           
        });
        function removeRow(button) {
            button.closest("tr").remove();
        }
        $('.SaveDocument').on("click", function () {

            var DocumentOption = $('#OpfullDocument').prop('checked');

            var DocumentID = $('#ManifiestoVal').val();
            var DocumentCustomerID = $('#CustomerVal').val();
            var DocumentEmployeeID = $('#EmployeeVal').val();
            var DocumentPlate = $('#LicensePlateVal').val();
            var DocumentDateRe = $('#NewDateRe').val();
           
            debugger;
            if (DocumentID == 0) {
                alert('Por favor de agregar un Manifiesto');
            }
            else {
                if (DocumentCustomerID == 0) {
                    alert('Por favor de agregar un Cliente');
                   
                }
                else {
                    if (DocumentEmployeeID == 0) {
                        alert('Por favor de agregar un Usuario');

                    }
                    else {
                        if (DocumentPlate.length < 4) {
                            alert('Por favor de agregar las placas del vehiculo');

                        }
                        else {
                            debugger;
                            if (DocumentDateRe == '') {
                                alert('Por favor de agregar la fecha de Recoleccion');

                            }
                            else {
                                SaveDocumentJS(DocumentID, DocumentCustomerID, DocumentEmployeeID, DocumentOption, DocumentPlate, DocumentDateRe);
                            }
                           
                        }
                       
                    }
                }
            }

           




        });

        function SaveDocumentJS(DocumentID, DocumentCustomerID, DocumentEmployeeID, DocumentOption, DocumentPlate, DocumentDateRe) {
            var ListProducts = [];
            var FlagError = 'NoError';
            var data = new FormData();
            data.append("DocumentID", DocumentID);
            data.append("DocumentCustomerID", DocumentCustomerID);
            data.append("DocumentEmployeeID", DocumentEmployeeID);
            data.append("DocumentPlate", DocumentPlate);
            data.append("DocumentDateRe", DocumentDateRe);
            var DocumentDateRo = $('#NewDateRo').val();

            if (DocumentOption == true) {


                data.append("DocumentDateRo", DocumentDateRo);
                $("#Producttable tbody tr").each(function (index) {


                    var product = $($(this).children("td")[0]).children().val();
                    var quantityProduct = $($(this).children("td")[1]).children().val();
                    var capacity = $($(this).children("td")[2]).children().val();
                    var typecontainer = $($(this).children("td")[3]).children().val();
                    var productmag = $($(this).children("td")[4]).children().val();

                    ValidateProducts(product, quantityProduct, typecontainer, productmag);

                    var Prod = new ProductRow(product, typecontainer, productmag, quantityProduct, capacity);
                    ListProducts.push(Prod);


                });

                var index = 0;
                for (var product of ListProducts) {

                    data.append("ListProducts[" + index + "].ProductID", product.ProductID);
                    data.append("ListProducts[" + index + "].ContainerID", product.ContainerID);
                    data.append("ListProducts[" + index + "].ManagementID", product.ManagementID);
                    data.append("ListProducts[" + index + "].Quantity", product.Quantity);
                    data.append("ListProducts[" + index + "].Unit", product.Unit);
                    index++;
                }
            }



            if (DocumentDateRo == '') {
                alert('Por favor de agregar la fecha de Recepcion al manifiesto');

            }
            else {
                //data.append("ListProducts", ListProducts);
                debugger;
                var url = '@Url.Action("AddDocument", "Document")';
                if (FlagError == 'NoError') {
                    $.ajax({
                        url: url,
                        data: data,
                        //dataType: "JSON",
                        cache: false,
                        contentType: false,
                        processData: false,
                        assign: false,
                        method: "post",
                        success: function (r) {
                            debugger;
                            if (r == "true") {
                                alert("El manifiesto se agrego con exito");
                                let urlR = '@Url.Action("Document", "Home")';


                                window.location.href = urlR;
                            }
                            else {
                                alert("Hubo en error favor de verificar la informacion o inentarlo de nuevo");
                            }


                        },
                        error: function () {

                            alert("Error intente mas tarde");
                        }
                    });
                }
                else {

                }

            }
        }

        function ValidateProducts(product, quantityProduct, typecontainer, productmag) {

            if (product == 0) {
                alert('Favor de agregar un Producto en la seccion de productos. (Verificar informacion)');
                exit();
            }
            else {
                if (quantityProduct == 0) {
                    alert('Favor de agregar la cantidad del Producto en la seccion de productos. (Verificar informacion)');
                    exit();
                }
                else {
                    if (typecontainer == 0) {
                        alert('Favor de agregar el contenedor para el producto en la seccion de productos. (Verificar informacion)');
                        exit();
                    }
                    else {
                        if (productmag == 0) {
                            alert('Favor de agregar el tipo de manejo para el Producto en la seccion de productos. (Verificar informacion)');
                            exit();
                        }
                       
                    }
                }
            }


          

        }


        $('.DeleteProductsT').on("click", function () {

            $('.ProductRows').empty();



        });





        $('#OpfullDocument').on('click', function () {



            if ($(this).prop('checked') == true) {
                $('.DocumentFormOptional').css('display', 'block')
                $("#NewDateRo").prop('disabled', false);
            }
            else {
                $('.DocumentFormOptional').css('display', 'none')
                $("#NewDateRo").prop('disabled', true);
                $("#NewDateRo").val('');
            }

        });


        function MCreateTable(Product, ProductQuantity, Unit, Container , Management) {

            var table = "";
            table += "<tr>" +
                            "<td>" + Product + "</td>" +
                            "<td>" + ProductQuantity + "</td>" +
                            "<td>" + Unit  + "</td>" +
                            "<td>" + Container + "</td>" +
                            "<td>" + Management + "</td>" +
                        "<tr>";



            debugger;
            $(".ProductRows").append(table);



        }


      
    </script>

}