@using SCM.ViewModel;
@model DataDocumentVM;

@{
    ViewData["Title"] = "Document";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<section class="Document">

    <div class="row">
        <div class="col-md-5 offset-md-3">
            <h2 class="text-center">Alta de Manifiesto</h2>
        </div>

    </div>

    <!--NUMBER OF THE DOCUMENT-->
    <div class="form-group row">
        <label class="control-label col-sm-2 offset-md-2" for="CustomerVal">No. Manifiesto:</label>
        <div class="col-sm-6 input-group">

            <div class="input-group-append">
                <span class="input-group-text"><i class="fa fa-calendar"></i></span>
            </div>
            <input type="number" min="0" class="form-control" id="ManifiestoVal" placeholder="Agregar el numero del Manifiesto">
        </div>
    </div>
    <!--CUSTOMER-->
    <div class="form-group row">
        <label class="control-label col-sm-2 offset-md-2" for="CustomerVal">Cliente:</label>
        <div class="col-sm-6 input-group">

            <div class="input-group-append">
                <span class="input-group-text"><i class="fa fa-calendar"></i></span>
            </div>

            <select class="form-control" id="CustomerVal">
                <option value="0">Por favor selecciona un Cliente</option>
                @{foreach (var item in Model.Customers)
                    {
                        <option value="@item.CustomerID">@item.CustomerName</option>
                    }
                }



            </select>
        </div>
    </div>

    <!--EMPLOYEE-->
    <div class="form-group row">
        <label class="control-label col-sm-2 offset-md-2" for="CustomerVal">Empleado:</label>
        <div class="col-sm-6 input-group">

            <div class="input-group-append">
                <span class="input-group-text"><i class="fa fa-calendar"></i></span>
            </div>

            <select class="form-control" id="EmployeeVal">
                <option value="0">Por favor selecciona un Empleado</option>
                @{foreach (var item in Model.Users)
                    {
                        <option value="@item.UsersID">@item.UsersName</option>
                    }
                }
            </select>
        </div>
    </div>



    <!--OPTION TO GET FULL INFORMATION FOR THE DOCUMENT-->
    <div class="form-group row">
        <div class="col-md-6 offset-md-4">
            <div class="form-check" style="padding:0;">

                <label style="margin-top:7px; margin-right: 25px;" class="form-check-label" for="OpfullDocument">
                    Selecciona el cuadro si requieres guardaer todo el manifiesto
                </label>
                <input style="width:2rem; height:2rem;" class="form-check-input" type="checkbox" id="OpfullDocument">
            </div>
        </div>
    </div>


    <section class="DocumentFormOptional" style="display:none; margin-top:10px;">

        <!--ADD PRODUCTS-->
        <div class="form-group row">
            <label for="EmployeeVal" class="col-sm-2 offset-md-2 col-form-label">Agregar Productos</label>

            <div class="col-md-2">
                <button type="button" class="btn btn-primary btn_big AddProduct">Agregar</button>

            </div>
        </div>



        <!--PRODUCTS WITH THEIR ATRIBUTES-->
        <div class="form-group row">
            <table class="table table-striped table-dark col-md-8 offset-md-2" id="Producttable">
                <thead>
                    <tr>
                        <th scope="col">Descripcion del Producto</th>
                        <th scope="col">Cantidad</th>
                        <th scope="col">Capacidad</th>
                        <th scope="col">Tipo de Contenedor</th>

                        <th scope="col">Manejo del Producto</th>
                    </tr>
                </thead>
                <tr class="participantRow">

                    <td>
                        <select class="form-control" id="ProductVal">
                            <option value="0">Por favor selecciona un Producto</option>

                            @{foreach (var item in Model.Products)
                                {
                                    <option value="@item.ProductID">@item.ProductName</option>
                                }
                            }
                        </select>
                    </td>
                    <td>
                        <input type="number" min="0" class="form-control" id="ProductQuantityVal" placeholder="Agregar la cantidad del Producto">
                    </td>

                    <td>
                        <input type="text" class="form-control" id="UnitVal" placeholder="Agregar la capacidad para el Contenedor">
                    </td>
                    <td>
                        <select class="form-control" id="ContainerVal">
                            <option value="0">Por favor selecciona un Contenedor</option>

                            @{foreach (var item in Model.Containers)
                                {
                                    <option value="@item.ContainerID">@item.ContainerName</option>
                                }
                            }
                        </select>
                    </td>
                    <td>
                        <select class="form-control" id="ManagementVal">
                            <option value="0">Por favor selecciona el manejo para el material</option>

                            @{foreach (var item in Model.ManagementsTypes)
                                {
                                    <option value="@item.ManagementID">@item.ManagementName</option>
                                }
                            }
                        </select>
                    </td>


                    <td>
                        <button class="btn btn-danger remove" type="button">Remove</button>
                    </td>
                </tr>
            </table>
        </div>

        <!--BUTTON TO SAVE THE DOCUMENT-->
        <div class="row">
            <div class="col-md-2 offset-md-2">
                <button class="btn btn-danger DeleteProductsT">Eliminar Productos</button>
            </div>
        </div>

    </section>


    <!--BUTTON TO SAVE THE DOCUMENT-->
    <div class="form-group row">
        <div class="col-md-2 offset-md-8">
            <button style="text-align:right" class="btn btn-primary SaveDocument">Guardar Manifiesto</button>
        </div>
    </div>
</section>




@section Scripts
    {
    <script>

        class ProductRow {
            constructor(ProductID, ContainerID, ManagementID, Quantity, Unit) {
                this.ProductID = ProductID;
                this.ContainerID = ContainerID;
                this.ManagementID = ManagementID;
                this.Quantity = Quantity;
                this.Unit = Unit;
            }
        }
        /* Variables */

        var row = $(".participantRow");

        /* Functions */


        function addRow() {
            row.clone(true, true).appendTo("#Producttable");
        }

        $('.AddProduct').on("click", function () {



            if ($("#Producttable tr").length < 17) {
                addRow();

            }
            $(this).closest("tr").appendTo("#Producttable");



        });
        $("#Producttable").on('click', '.remove', function () {

            //if($("#participantTable tr").length === 3) {
            //alert($("#participantTable tr").length);
            // $(".remove").hide();
            //} else if($("#participantTable tr").length - 1 ==3) {
            // $(".remove").hide();
            //  removeRow($(this));
            //var i = Number(p)-1;
            //} else {
            removeRow($(this));
            //var i = Number(p)-1;
            // }
        });
        function removeRow(button) {
            button.closest("tr").remove();
        }
        $('.SaveDocument').on("click", function () {

            var DocumentOption = $('#OpfullDocument').prop('checked');

            var DocumentID = $('#ManifiestoVal').val();
            var DocumentCustomerID = $('#CustomerVal').val();
            var DocumentEmployeeID = $('#EmployeeVal').val();

            if (DocumentID == 0) {
                alert('Por favor de agregar un Manifiesto');
            }
            else {
                if (DocumentCustomerID == 0) {
                    alert('Por favor de agregar un Cliente');
                   
                }
                else {
                    if (DocumentEmployeeID == 0) {
                        alert('Por favor de agregar un Usuario');

                    }
                    else {
                        SaveDocumentJS(DocumentID, DocumentCustomerID, DocumentEmployeeID, DocumentOption);
                    }
                }
            }

            debugger;




        });

        function SaveDocumentJS(DocumentID, DocumentCustomerID, DocumentEmployeeID, DocumentOption) {
            var ListProducts = [];
            var FlagError = 'NoError';
            var data = new FormData();
            data.append("DocumentID", DocumentID);
            data.append("DocumentCustomerID", DocumentCustomerID);
            data.append("DocumentEmployeeID", DocumentEmployeeID);


            if (DocumentOption == true) {

                $("#Producttable tbody tr").each(function (index) {


                    var product = $($(this).children("td")[0]).children().val();
                    var quantityProduct = $($(this).children("td")[1]).children().val();
                    var capacity = $($(this).children("td")[2]).children().val();
                    var typecontainer = $($(this).children("td")[3]).children().val();
                    var productmag = $($(this).children("td")[4]).children().val();

                    ValidateProducts(product, quantityProduct, typecontainer, productmag);

                    var Prod = new ProductRow(product, typecontainer, productmag, quantityProduct, capacity);
                    ListProducts.push(Prod);


                });

                var index = 0;
                for (var product of ListProducts) {

                    data.append("ListProducts[" + index + "].ProductID", product.ProductID);
                    data.append("ListProducts[" + index + "].ContainerID", product.ContainerID);
                    data.append("ListProducts[" + index + "].ManagementID", product.ManagementID);
                    data.append("ListProducts[" + index + "].Quantity", product.Quantity);
                    data.append("ListProducts[" + index + "].Unit", product.Unit);
                    index++;
                }
            }
          

            //data.append("ListProducts", ListProducts);
            debugger;
            var url = '@Url.Action("AddDocument", "Document")';
            if (FlagError == 'NoError') {
                $.ajax({
                    url: url,
                    data: data,
                    //dataType: "JSON",
                    cache: false,
                    contentType: false,
                    processData: false,
                    assign: false,
                    method: "post",
                    success: function (r) {
                        debugger;
                        if (r == "true") {
                            var urlR = '@Url.Action("Warehouse", "Warehouse")';
                            alert("Se agrego el producto al inventario");
                            window.location.href = urlR;
                        }
                        else {
                            if (r == "NoProduct") {
                                alert("El producto no existe favor de verificarlo");
                            }
                        }


                    },
                    error: function () {

                        alert("Error intente mas tarde");
                    }
                });
            }
            else {
               
            }
        }

        function ValidateProducts(product, quantityProduct, typecontainer, productmag) {

            if (product == 0) {
                alert('Favor de agregar un Producto en la seccion de productos. (Verificar informacion)');
                exit();
            }
            else {
                if (quantityProduct == 0) {
                    alert('Favor de agregar la cantidad del Producto en la seccion de productos. (Verificar informacion)');
                    exit();
                }
                else {
                    if (typecontainer == 0) {
                        alert('Favor de agregar el contenedor para el producto en la seccion de productos. (Verificar informacion)');
                        exit();
                    }
                    else {
                        if (productmag == 0) {
                            alert('Favor de agregar el tipo de manejo para el Producto en la seccion de productos. (Verificar informacion)');
                            exit();
                        }
                       
                    }
                }
            }


          

        }


        $('.DeleteProductsT').on("click", function () {

            $('.ProductRows').empty();



        });





        $('#OpfullDocument').on('click', function () {



            if ($(this).prop('checked') == true) {
                $('.DocumentFormOptional').css('display', 'block')
            }
            else {
                $('.DocumentFormOptional').css('display', 'none')
            }

        });


        function MCreateTable(Product, ProductQuantity, Unit, Container , Management) {

            var table = "";
            table += "<tr>" +
                            "<td>" + Product + "</td>" +
                            "<td>" + ProductQuantity + "</td>" +
                            "<td>" + Unit  + "</td>" +
                            "<td>" + Container + "</td>" +
                            "<td>" + Management + "</td>" +
                        "<tr>";



            debugger;
            $(".ProductRows").append(table);



        }


        $("#BtnLogin").on("click", function (e) {
            // e.preventDefault();
            // e.stopPropagation();
            debugger;
            var UsertInput = $("#UserInput").val();
            var PasswordInput = $("#PasswordInput").val();

            var data = new FormData();
            data.append("UserInput", UsertInput);
            data.append("PasswordInput", PasswordInput);
            debugger;
            var url = '@Url.Action("ValidateUser", "Home")';
            var urlR = '@Url.Action("Home", "Home")';
            $.ajax({
                url: url,
                data: data,

                //dataType: "JSON",
                cache: false,
                contentType: false,
                processData: false,
                assign: false,
                method: "post",
                success: function (r) {
                    debugger;
                    if (r == 'false') {
                        alert('El usuario o password no coinciden con ningun registro en la base de datos');
                    }
                    else {
                        if (r == 'NoUser') {
                            alert('El usuario o password no coinciden con ningun registro en la base de datos, Verificar si existe en la base de datos');
                        }
                        else {

                            window.location.href = urlR;

                        }

                    }

                },
                error: function () {

                    alert("Error intentalo mas tarde");
                }
            });
        });
    </script>

}