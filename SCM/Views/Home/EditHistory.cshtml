@using SCM.ViewModel;
@model EditDocumentVM;

@{
    ViewData["Title"] = "EditHistory";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<section class="Document">
    <div class="divHeader">

        <h2 style="color: white;" class="text-center">Favor de Editar el manifiesto</h2>


    </div>


    <!--NUMBER OF THE DOCUMENT-->
    <div class="form-group row">
        <label class="control-label col-sm-2 offset-md-2" for="ManifiestoValE">No. Manifiesto:</label>
        <div class="col-sm-6 input-group">

            <div class="input-group-append">
                <span class="input-group-text"><i class="fas fa-file-alt"></i></span>
            </div>
            <input data-old="@Model.DocumentD.DocumentID" type="number" min="0" class="form-control" value="@Model.DocumentD.DocumentID" id="ManifiestoValE" placeholder="Agregar el numero del Manifiesto">
        </div>
    </div>
    <!--CUSTOMER-->
    <div class="form-group row">
        <label class="control-label col-sm-2 offset-md-2" for="CustomerValE">Cliente:</label>
        <div class="col-sm-6 input-group">

            <div class="input-group-append">
                <span class="input-group-text"><i class="fas fa-address-book"></i></span>
            </div>

            <select class="form-control" id="CustomerValE">

                @{foreach (var item in Model.Data.Customers)
                    {
                        if (Model.DocumentD.Customer == item.CustomerName)
                        {
                            <option selected value="@item.CustomerID">@item.CustomerName</option>
                        }
                        else
                        {
                            <option value="@item.CustomerID">@item.CustomerName</option>
                        }

                    }
                }



            </select>
        </div>
    </div>

    <!--EMPLOYEE-->
    <div class="form-group row">
        <label class="control-label col-sm-2 offset-md-2" for="EmployeeValE">Empleado:</label>
        <div class="col-sm-6 input-group">

            <div class="input-group-append">
                <span class="input-group-text"><i class="fas fa-user"></i></span>
            </div>

            <select class="form-control" id="EmployeeValE">

                @{foreach (var item in Model.Data.Users)
                    {
                        if (Model.DocumentD.Username == item.UsersName)
                        {
                            <option selected value="@item.UsersID">@item.UsersName</option>
                        }
                        else
                        {
                            <option value="@item.UsersID">@item.UsersName</option>
                        }

                    }
                }
            </select>
        </div>
    </div>



    <section class="DocumentFormOptional" style="margin-top:10px;">

        <!--ADD PRODUCTS-->
        <div class="form-group row">
            <label class="col-sm-2 offset-md-2 col-form-label">Agregar Productos</label>

            <div class="col-md-2">
                <button type="button" class="btn btn-primary btn_big AddProduct">Agregar</button>

            </div>
        </div>



        <!--PRODUCTS WITH THEIR ATRIBUTES-->
        <div class="form-group row">
            <table class="table table-striped table-dark col-md-10 offset-md-1" id="ProducttableE">
                <thead>
                    <tr>
                        <th scope="col">Descripcion del Producto</th>
                        <th scope="col">Cantidad</th>
                        <th scope="col">Capacidad</th>
                        <th scope="col">Tipo de Contenedor</th>
                        <th scope="col">Manejo del Producto</th>
                    </tr>
                </thead>

                @{foreach (var item in Model.Products)
                    {
                        <tr class="participantRow">
                            <td>
                                <select class="form-control" id="ProductValE">
                                    @{foreach (var product in Model.Data.Products)
                                        {
                                            if (product.ProductID == item.ProductID)
                                            {
                                                <option selected value="@product.ProductID">@product.ProductName</option>
                                            }
                                            else
                                            {
                                                <option value="@product.ProductID">@product.ProductName</option>
                                            }

                                        }
                                    }
                                </select>
                            </td>
                            <td>
                                <input value="@item.Quantity" type="number" min="0" class="form-control" id="ProductQuantityValE" placeholder="Agregar la cantidad del Producto">
                            </td>

                            <td>
                                <input value="@item.Unit" type="text" class="form-control" id="UnitValE" placeholder="Agregar la capacidad para el Contenedor">
                            </td>
                            <td>
                                <select class="form-control" id="ContainerValE">
                                    @{foreach (var container in Model.Data.Containers)
                                        {
                                            if (container.ContainerID == item.ContainerID)
                                            {
                                                <option selected value="@container.ContainerID">@container.ContainerName</option>
                                            }
                                            else
                                            {
                                                <option value="@container.ContainerID">@container.ContainerName</option>
                                            }

                                        }
                                    }


                                </select>
                            </td>
                            <td>
                                <select class="form-control" id="ManagementValE">


                                    @{foreach (var management in Model.Data.ManagementsTypes)
                                        {
                                            if (management.ManagementID == item.ManagementID)
                                            {
                                                <option selected value="@management.ManagementID">@management.ManagementName</option>
                                            }
                                            else
                                            {
                                                <option value="@management.ManagementID">@management.ManagementName</option>
                                            }

                                        }
                                    }

                                </select>
                            </td>


                            <td>
                                <button class="btn btn-danger remove" type="button">Remove</button>
                            </td>
                        </tr>
                    }
                }

            </table>
        </div>


    </section>


    <!--BUTTON TO SAVE THE DOCUMENT-->
    <div class="form-group row">
        <div class="col-md-2 offset-md-2">
            <a class="btn btn-primary" asp-action="Status" asp-controller="Home">Back</a>
        </div>

        <div class="col-md-2 offset-md-5">
            <button style="text-align:right" class="btn btn-primary EditDocumentBtnU">Editar Manifiesto</button>
        </div>
    </div>
</section>



@section Scripts
    {
    <script>

        class ProductRow {
            constructor(ProductID, ContainerID, ManagementID, Quantity, Unit) {
                this.ProductID = ProductID;
                this.ContainerID = ContainerID;
                this.ManagementID = ManagementID;
                this.Quantity = Quantity;
                this.Unit = Unit;
            }
        }
        /*  Variables */

        var CompleteDrow = $(".participantRow");

        /* Functions */


        function addRowC() {
            CompleteDrow.clone(true, true).appendTo("#ProducttableE");
        }

        $('.AddProduct').on("click", function () {



            if ($("#ProducttableE tr").length < 17) {
                addRowC();

            }
            $(this).closest("tr").appendTo("#ProducttableE");



        });
        $("#ProducttableE").on('click', '.remove', function () {
            removeRow($(this));

        });
        function removeRow(button) {
            button.closest("tr").remove();
        }
        $('.EditDocumentBtnU').on("click", function () {

            debugger;

            var DocumentID = $('#ManifiestoValE').val();
            var OldDocumentID = $('#ManifiestoValE').attr("data-old");

            var DocumentCustomerID = $('#CustomerValE').val();
            var DocumentEmployeeID = $('#EmployeeValE').val();



            SaveDocumentJSE(DocumentID, OldDocumentID, DocumentCustomerID, DocumentEmployeeID);





        });

        function SaveDocumentJSE(DocumentID, OldDocumentID, DocumentCustomerID, DocumentEmployeeID) {
            var ListProducts = [];
            var FlagError = 'NoError';
            var data = new FormData();
            data.append("DocumentID", DocumentID);
            data.append("OldDocumentID", OldDocumentID);
            data.append("DocumentCustomerID", DocumentCustomerID);
            data.append("DocumentEmployeeID", DocumentEmployeeID);



            $("#ProducttableE tbody tr").each(function (index) {


                var product = $($(this).children("td")[0]).children().val();
                var quantityProduct = $($(this).children("td")[1]).children().val();
                var capacity = $($(this).children("td")[2]).children().val();
                var typecontainer = $($(this).children("td")[3]).children().val();
                var productmag = $($(this).children("td")[4]).children().val();

                ValidateProducts(product, quantityProduct, typecontainer, productmag);

                var Prod = new ProductRow(product, typecontainer, productmag, quantityProduct, capacity);
                ListProducts.push(Prod);


            });

            var index = 0;
            for (var product of ListProducts) {

                data.append("ListProducts[" + index + "].ProductID", product.ProductID);
                data.append("ListProducts[" + index + "].ContainerID", product.ContainerID);
                data.append("ListProducts[" + index + "].ManagementID", product.ManagementID);
                data.append("ListProducts[" + index + "].Quantity", product.Quantity);
                data.append("ListProducts[" + index + "].Unit", product.Unit);
                index++;
            }



            //data.append("ListProducts", ListProducts);
            debugger;
            var url = '@Url.Action("EditDocumentAction", "Document")';
            if (FlagError == 'NoError') {
                $.ajax({
                    url: url,
                    data: data,
                    //dataType: "JSON",
                    cache: false,
                    contentType: false,
                    processData: false,
                    assign: false,
                    method: "post",
                    success: function (r) {

                        if (r == "true") {
                            alert("El manifiesto se edito con exito");
                            let urlR = '@Url.Action("Status", "Home")';


                            window.location.href = urlR;
                        }
                        else {
                            alert("Hubo en error favor de verificar la informacion o inentarlo de nuevo");
                        }


                    },
                    error: function () {

                        alert("Error intente mas tarde");
                    }
                });
            }
            else {

            }
        }

        function ValidateProducts(product, quantityProduct, typecontainer, productmag) {

            if (product == 0) {
                alert('Favor de agregar un Producto en la seccion de productos. (Verificar informacion)');
                exit();
            }
            else {
                if (quantityProduct == 0) {
                    alert('Favor de agregar la cantidad del Producto en la seccion de productos. (Verificar informacion)');
                    exit();
                }
                else {
                    if (typecontainer == 0) {
                        alert('Favor de agregar el contenedor para el producto en la seccion de productos. (Verificar informacion)');
                        exit();
                    }
                    else {
                        if (productmag == 0) {
                            alert('Favor de agregar el tipo de manejo para el Producto en la seccion de productos. (Verificar informacion)');
                            exit();
                        }

                    }
                }
            }




        }











        function MCreateTable(Product, ProductQuantity, Unit, Container , Management) {

            var table = "";
            table += "<tr>" +
                            "<td>" + Product + "</td>" +
                            "<td>" + ProductQuantity + "</td>" +
                            "<td>" + Unit  + "</td>" +
                            "<td>" + Container + "</td>" +
                            "<td>" + Management + "</td>" +
                        "<tr>";



            debugger;
            $(".ProductRows").append(table);



        }



    </script>

}